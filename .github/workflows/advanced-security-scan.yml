name: üîç Security Scanning (DAST, Trivy, Checkov)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  issues: write
  actions: write
  security-events: write
  pull-requests: write
  id-token: write

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Build Docker image
      - name: Build Docker image
        run: docker build -t py-secure-demo .

      # 3Ô∏è‚É£ Run Container Scan using Trivy
      - name: Run Trivy Container Scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: py-secure-demo
          format: table
          exit-code: 0
          severity: HIGH,CRITICAL

      # 4Ô∏è‚É£ Run IaC Scan using Checkov
      - name: Run Checkov IaC Scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: all
          soft_fail: true

      # 5Ô∏è‚É£ Start Flask App for ZAP DAST
      - name: Start Flask App
        run: |
          pip install -r requirements.txt
          nohup python app.py > app.log 2>&1 &
          sleep 10

      # 6Ô∏è‚É£ Run OWASP ZAP DAST Scan
      - name: Run OWASP ZAP DAST Scan
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: "http://localhost:5000"
          cmd_options: "-a"
        continue-on-error: true

      # 7Ô∏è‚É£ Upload ZAP Report
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: report_html.html
